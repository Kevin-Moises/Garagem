CREATE TABLE IF NOT EXISTS public.Carro 
(
    idCarro  serial,
    placa character varying(20) COLLATE pg_catalog. default ,
    chassi character varying(20) COLLATE pg_catalog. default ,
    ano integer,
    modelo character varying(50) COLLATE pg_catalog. default ,
    montadora character varying(50) COLLATE pg_catalog. default ,
    ultimoAluguel  character varying(20) COLLATE pg_catalog. default ,
    disponivel integer,
    CONSTRAINT  Carro_pkey  PRIMARY KEY ( idCarro )
);


CREATE TABLE IF NOT EXISTS public.Cliente 
(
    idCli  serial,
    nomeCli  character varying(50) COLLATE pg_catalog. default ,
    numCNH  character varying(20) COLLATE pg_catalog. default ,
    rua character varying(50) COLLATE pg_catalog. default ,
    num integer,
    cep character varying(20) COLLATE pg_catalog. default ,
    cidade character varying(50) COLLATE pg_catalog. default ,
    CONSTRAINT  Cliente_pkey  PRIMARY KEY ( idCli )
);


CREATE TABLE IF NOT EXISTS public. ContatoCliente 
(
    idCli  integer NOT NULL,
    contatoCli  character varying(20) COLLATE pg_catalog. default  NOT NULL,
    CONSTRAINT  ContatoCliente_pkey  PRIMARY KEY ( contatoCli ,  idCli ),
    CONSTRAINT  ContatoCliente_idCli_fkey  FOREIGN KEY ( idCli )
    REFERENCES public. Cliente  ( idCli ) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS public.Funcionario 
(
    idFunc  serial,
    nomeFunc  character varying(50) COLLATE pg_catalog. default ,
    departamento character varying(20) COLLATE pg_catalog. default ,
    ramal integer,
    turno character varying(20) COLLATE pg_catalog. default ,
    cidade character varying(50) COLLATE pg_catalog. default ,
    rua character varying(50) COLLATE pg_catalog. default ,
    num integer,
    cep character varying(20) COLLATE pg_catalog. default ,
    CONSTRAINT  Funcionario_pkey  PRIMARY KEY ( idFunc )
);

CREATE TABLE IF NOT EXISTS public.ContatoFunc 
(
    idFunc  integer NOT NULL,
    contatoFunc  character varying(20) COLLATE pg_catalog. default  NOT NULL,
    CONSTRAINT  ContatoFunc_pkey  PRIMARY KEY ( idFunc ,  contatoFunc ),
    CONSTRAINT  ContatoFunc_idFunc_fkey  FOREIGN KEY ( idFunc )
    REFERENCES public. Funcionario  ( idFunc ) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
);



CREATE TABLE IF NOT EXISTS public. FuncionarioGerenciaCarro 
(
     idFunc  integer NOT NULL,
     idCarro  integer NOT NULL,
    CONSTRAINT  FuncionarioGerenciaCarro_pkey  PRIMARY KEY ( idFunc ,  idCarro ),
    CONSTRAINT  FuncionarioGerenciaCarro_idCarro_fkey  FOREIGN KEY ( idCarro )
        REFERENCES public. Carro  ( idCarro ) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT  FuncionarioGerenciaCarro_idFunc_fkey  FOREIGN KEY ( idFunc )
        REFERENCES public. Funcionario  ( idFunc ) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS public.Aluguel 
(
     idAluguel  serial,
     dtaAluguel  character varying(20) COLLATE pg_catalog. default  NOT NULL,
     motivoAluguel  character varying(20) COLLATE pg_catalog. default ,
     dtaDevolucao  character varying(20) COLLATE pg_catalog. default ,
    solicitacao integer,
     idCli  integer,
     idCarro  integer,
     idFunc  integer,
    CONSTRAINT  Aluguel_pkey  PRIMARY KEY ( idAluguel ,  dtaAluguel ),
    CONSTRAINT  Aluguel_idCarro_fkey  FOREIGN KEY ( idCarro )
        REFERENCES public. Carro  ( idCarro ) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT  Aluguel_idCli_fkey  FOREIGN KEY ( idCli )
        REFERENCES public. Cliente  ( idCli ) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT  Aluguel_idFunc_fkey  FOREIGN KEY ( idFunc )
        REFERENCES public. Funcionario  ( idFunc ) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

